<?php
/**
 * @file
 * Symfony Kernel module
 */

/**
 * Implements hook_menu().
 */
function kernel_menu() {
  $items = array();
  $items['bundles'] = array(
    'page callback' => 'kernel_assets_callback',
    'access callback' => TRUE,
    'file' => 'kernel.pages.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 *  Implements hook_service_provider().
 *
 * @param string $name
 *
 * @return array
 */
function kernel_service_provider($name = 'app') {
  return array(
    array(new DrupalKernelServiceProvider(), array('kernel.name' => $name)),
    array(new DrushKernelServiceProvider())
  );
}

/**
 * Returns info about the registered kernels.
 *
 * @param string $name
 *   Kernel name (usually named for the directory)
 *
 * @return array
 *   Kernel info
 */
function kernel_info($name = 'app') {
  // Use the advanced drupal_static() pattern, since this is called very often.
  static $drupal_static_fast;
  if (!isset($drupal_static_fast)) {
    $drupal_static_fast['cache'] = &drupal_static(__FUNCTION__);
  }
  $cache = &$drupal_static_fast['cache'];

  if (!isset($cache)) {
    $cache = module_invoke_all('kernel_info');

    // Allow modules to alter the element type defaults.
    drupal_alter('kernel_info', $cache);
  }

  return isset($cache[$name]) ? $cache[$name] : array();
}

/**
 * Captures the response from the page callback for use in kernel_exit().
 */
function kernel_response(\Symfony\Component\HttpFoundation\Response $response = NULL) {
  $static = &drupal_static('kernel_response');
  if (isset($response)) {
    $static = $response;
  }
  else {
    return $static;
  }
}

/**
 * Implements hook_exit().
 */
function kernel_exit() {
  $c = \DrupalKernelContainer::get();

  $kernel = $c['kernel'];
  $response = kernel_response();
  if ($response && is_a($kernel, 'Symfony\Component\HttpKernel\TerminableInterface')) {
    $router_item = menu_get_item();
    $request = $router_item['page_arguments'][0];
    /* @var \Symfony\Component\HttpKernel\TerminableInterface $kernel */
    $kernel->terminate($request, $response);
  }
}

/**
 * Implements hook_init().
 */
function kernel_init() {
  $c = \DrupalKernelContainer::get();

  /* @var \Symfony\Bundle\FrameworkBundle\Routing\Router $router */
  $router = $c['router'];
  try {
    $path = current_path();
    $router->match(base_path() . $path);
    $router_item = array(
      'path' => $path,
      'page_callback' => 'kernel_callback',
      'page_arguments' => array(\Symfony\Component\HttpFoundation\Request::createFromGlobals()),
      'delivery_callback' => '',
      'tab_parent' => '',
      'tab_root' => $path,
      'title' => '',
      'type' => MENU_CALLBACK,
      'include_file' => drupal_get_path('module', 'kernel') . '/kernel.pages.inc',
      'href' => $path,
      'tab_root_href' => $path,
      'tab_parent_href' => '',
      'access' => TRUE,
      'original_map' => arg(NULL, $path),
      'map' => arg(NULL, $path),
    );

    // If the desire is to output a whole Symfony response, use:
    //

    // $router_item['page_callback'] = array($kernel, 'handle');
    // $router_item['page_arguments'] = array($request);
    // $router_item['delivery_callback'] = 'kernel_deliver_response';

    menu_set_item(NULL, $router_item);
  }
  catch (\Exception $e) {

  }
}

/**
 * Delivers the response and shuts down the kernel and Drupal.
 *
 * @see drupal_deliver_html_page()
 */
function kernel_deliver_response(\Symfony\Component\HttpFoundation\Response $response) {
  $response->send();

  module_invoke_all('exit');

  // Commit the user session, if needed.
  drupal_session_commit();

  if (variable_get('cache', 0) && ($cache = drupal_page_set_cache())) {
    drupal_serve_page_from_cache($cache);
  }

  _registry_check_code(REGISTRY_WRITE_LOOKUP_CACHE);
  drupal_cache_system_paths();
  module_implements_write_cache();
  system_run_automated_cron();
  exit();
}
